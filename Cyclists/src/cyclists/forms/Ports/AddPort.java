/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package cyclists.forms.Ports;

import cyclists.Database;
import cyclists.Entity.Ports;
import cyclists.forms.MainForm;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JTextField;

/**
 *
 * @author Richard
 */
public class AddPort extends javax.swing.JFrame {

	/**
	 * Creates new form AddCiclyst
	 */
	public AddPort() {
		initComponents();
		try {
			//Filling the ComboBox
			addItemsCombo();
			Ports p = new Ports();
			p.loadTable(pTablePort);
		} catch (SQLException ex) {
			Logger.getLogger(AddPort.class.getName()).log(Level.SEVERE, null, ex);
		}
		setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("../../../images/icon.png")));
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tfCategory = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        btInsert = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        tfName = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        cbStage = new javax.swing.JComboBox<>();
        tfHeight = new javax.swing.JTextField();
        pTablePort = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        cbDorsal = new javax.swing.JComboBox<>();
        tfSlope = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        tfCategory.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tfCategoryKeyTyped(evt);
            }
        });

        jLabel1.setText("Name");

        btInsert.setText("Insert");
        btInsert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btInsertActionPerformed(evt);
            }
        });

        jLabel2.setText("New Port");

        jLabel3.setText("Stage Num");

        jLabel4.setText("Height");

        jLabel5.setText("Category");

        cbStage.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] {}));
        cbStage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbStageActionPerformed(evt);
            }
        });

        tfHeight.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tfHeightKeyTyped(evt);
            }
        });

        pTablePort.setMaximumSize(new java.awt.Dimension(32767, 234));

        javax.swing.GroupLayout pTablePortLayout = new javax.swing.GroupLayout(pTablePort);
        pTablePort.setLayout(pTablePortLayout);
        pTablePortLayout.setHorizontalGroup(
            pTablePortLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 467, Short.MAX_VALUE)
        );
        pTablePortLayout.setVerticalGroup(
            pTablePortLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 215, Short.MAX_VALUE)
        );

        jLabel6.setText("Slope");

        jLabel7.setText("Cyclist Dorsal");

        cbDorsal.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(92, 92, 92)
                        .addComponent(btInsert))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(tfHeight, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(tfName, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(cbStage, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7)
                            .addComponent(cbDorsal, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel6)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tfCategory, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tfSlope, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(pTablePort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(35, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(pTablePort, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(23, 23, 23))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(tfName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(cbStage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(tfHeight, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(tfCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbDorsal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(tfSlope, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btInsert)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

	//Function for set items on ComboBox
	public void addItemsCombo() throws SQLException {
		//Query
		String queryStage = "select netapa from Etapes order by netapa;";
		String queryDorsal = "select dorsal from Cyclist order by dorsal;";
		Database db = new Database();
		//Connect
		db.makeConnection();
		try (
				Statement stStage = db.getConnection().createStatement();
				ResultSet rsStage = stStage.executeQuery(queryStage);) {
			while (rsStage.next()) {
				int n = rsStage.getInt(1);
				cbStage.addItem(String.valueOf(rsStage.getInt(1)));
			}
			Statement stDorsal = db.getConnection().createStatement();
			ResultSet rsDorsal = stDorsal.executeQuery(queryStage);
			while (rsDorsal.next()) {
				cbDorsal.addItem(String.valueOf(rsDorsal.getInt(1)));
			}
		} catch (SQLException e) {
			System.out.println("Error " + e.getMessage());
		}
		//Disconnect
		db.closeConnection();
	}

    private void btInsertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btInsertActionPerformed
		// TODO add your handling code here:
		// tfAlerts
		if (tfName.getText().isEmpty() && tfHeight.getText().isEmpty() && tfCategory.getText().isEmpty() && tfSlope.getText().isEmpty()) {
			MainForm.alertsWarning(this, "All values missing", "Name, height, category and slope fields are missing");
		} else if (tfName.getText().isEmpty() && tfHeight.getText().isEmpty() && tfCategory.getText().isEmpty()) {
			MainForm.alertsWarning(this, "Fields missing", "Name, height and category fields are missing");
		} else if (tfName.getText().isEmpty() && tfHeight.getText().isEmpty() && tfSlope.getText().isEmpty()) {
			MainForm.alertsWarning(this, "Fields missing", "Name, height and slope fields are missing");
		} else if (tfName.getText().isEmpty() && tfCategory.getText().isEmpty() && tfSlope.getText().isEmpty()) {
			MainForm.alertsWarning(this, "Fields missing", "Name, category and slope fields are missing");
		} else {
			int dorsal = Integer.parseInt(tfHeight.getText());
			String name = tfName.getText();
			int age = Integer.parseInt(tfCategory.getText());
			String nTeam = cbStage.getSelectedItem().toString();
			Database db = new Database();
			try {
				if (db.searchID("dorsal", "Ciclistes", dorsal)) {
					MainForm.alertsWarning(this, "ID Duplicated", "ID Duplicated");
					// putting focus on tfDorsal
					tfHeight.requestFocus();
				} else {
					// Insert
					String sqlInsert = "INSERT INTO Ciclistes VALUES(?,?,?,?)";
					//Connect
					db.makeConnection();

					PreparedStatement pst = db.getConnection().prepareStatement(sqlInsert);
					pst.setInt(1, dorsal);
					pst.setString(2, name);
					pst.setInt(3, age);
					pst.setString(4, nTeam);

					pst.execute();
					//Disconnect
					db.closeConnection();
					//End of Insert
					//Information Message
					MainForm.alertsInformation(this, "Row inserted", "Row inserted");
					//The actual frame close
					this.setVisible(false);
				}
			} catch (SQLException ex) {
				Logger.getLogger(AddPort.class.getName()).log(Level.SEVERE, null, ex);
			}
		}
    }//GEN-LAST:event_btInsertActionPerformed


    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
		// TODO add your handling code here:
		this.setVisible(false);
//        this.rootPane.setEnabled(true);
//        this.rootPane.requestFocus();
    }//GEN-LAST:event_formWindowClosing

    private void cbStageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbStageActionPerformed
		// TODO add your handling code here:
    }//GEN-LAST:event_cbStageActionPerformed

	private void consumeEvente(KeyEvent evt, JTextField tf) {
		char c = evt.getKeyChar();
		if (tf.getText().length() > 2) {
			evt.consume();
		}
		if (((c < '0') || (c > '9')) && (c != '\b')) {
			evt.consume();
		}
	}

    private void tfCategoryKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfCategoryKeyTyped
		// TODO add your handling code here:
		consumeEvente(evt, tfCategory);
    }//GEN-LAST:event_tfCategoryKeyTyped

    private void tfHeightKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfHeightKeyTyped
		// TODO add your handling code here:
		consumeEvente(evt, tfHeight);
    }//GEN-LAST:event_tfHeightKeyTyped

	/**
	 * @param args the command line arguments
	 */
	public static void main(String args[]) {
		/* Set the Nimbus look and feel */
		//<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
		/* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
		 */
		try {
			for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
				if ("Nimbus".equals(info.getName())) {
					javax.swing.UIManager.setLookAndFeel(info.getClassName());
					break;
				}
			}
		} catch (ClassNotFoundException ex) {
			java.util.logging.Logger.getLogger(AddPort.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (InstantiationException ex) {
			java.util.logging.Logger.getLogger(AddPort.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (IllegalAccessException ex) {
			java.util.logging.Logger.getLogger(AddPort.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (javax.swing.UnsupportedLookAndFeelException ex) {
			java.util.logging.Logger.getLogger(AddPort.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		}
		//</editor-fold>
		//</editor-fold>
		//</editor-fold>
		//</editor-fold>

		/* Create and display the form */
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				new AddPort().setVisible(true);
			}
		});
	}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btInsert;
    private javax.swing.JComboBox<String> cbDorsal;
    private javax.swing.JComboBox<String> cbStage;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel pTablePort;
    private javax.swing.JTextField tfCategory;
    private javax.swing.JTextField tfHeight;
    private javax.swing.JTextField tfName;
    private javax.swing.JTextField tfSlope;
    // End of variables declaration//GEN-END:variables
}
